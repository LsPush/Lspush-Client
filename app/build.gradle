apply plugin: 'com.android.application'
apply from: rootProject.file('buildsystem/module.gradle')
apply from: rootProject.file('buildsystem/bugly.gradle')

android {
    def metadata = project.rootProject.ext.metadata

    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId APPLICATION_ID
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        def versionMajor = VERSION_MAJOR as int
        def versionMinor = VERSION_MINOR as int
        def versionPatch = VERSION_PATCH as int

        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'LSPUSH_SERVER_URL', "\"${metadata.lspushServerUrl}\""
        buildConfigField 'String', 'JAQ_KEY', "\"${metadata.jaqKey}\""
        buildConfigField 'String', 'BUGLY_APPID', "\"${metadata.buglyAppId}\""
        //buildConfigField 'String', 'BUGLY_APP_VERSION', "\"${metadata.buglyAppVersion}\""
        buildConfigField 'String', 'BUGLY_APP_VERSION', "\"${versionName}\""
        buildConfigField 'boolean', 'BUGLY_ENABLE_DEBUG', "${metadata.buglyEnableDebug}"

        def app_version = String.format("%d.%d.%d", versionMajor, versionMinor, versionPatch)
        resValue "string", "app_version", "$app_version"

        resConfigs "en", "zh"

        ndk {
            // 设置支持的 SO 库架构
            // Note: Even you use a ARM-Translation's Genymotion, bugly or mars-xlog also load x86 so.
            abiFilters 'armeabi', 'x86' //, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    signingConfigs {
        debugConfig {
            keyAlias metadata.alias
            keyPassword metadata.pwd
            // Note: travis-ci not support relative path
            storeFile rootProject.file(metadata.storeFile)
            storePassword metadata.storePwd
        }
        releaseConfig {
            keyAlias metadata.alias
            keyPassword metadata.pwd
            storeFile rootProject.file(metadata.storeFile)
            storePassword metadata.storePwd
        }
    }
    buildTypes {
        debug {
            // only use them when build LsPush.ok
            buildConfigField 'String', 'LSPUSH_PUBLIC_KEY', "\"${metadata.lspushPublicKey}\""
            buildConfigField 'String', 'MOB_SMS_ID', "\"${metadata.mobSMSId}\""
            buildConfigField 'String', 'MOB_SMS_KEY', "\"${metadata.mobSMSKey}\""

            //applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "app_name", "LsPush (debug)"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debugConfig
        }
        release {
            def proguards = rootProject.relativePath('proguards')

            minifyEnabled false
            shrinkResources false
            // http://blog.csdn.net/lihenair/article/details/51671803
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', proguards
            signingConfig signingConfigs.releaseConfig
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace("app", "${applicationId}_${versionName}")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

// android-gradle 2.3.0-beta2 do it in module.gradle don't take effect
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // https://developer.android.com/topic/libraries/support-library/revisions.html
    compile("com.android.support:appcompat-v7:${SUPPORT_VERSION}")
    compile("com.android.support:design:${SUPPORT_VERSION}")
    compile("com.android.support:recyclerview-v7:${SUPPORT_VERSION}")

    compile("com.google.dagger:dagger:${DAGGER_VERSION}")
    annotationProcessor("com.google.dagger:dagger-compiler:${DAGGER_VERSION}")

    // 腾讯 bugly, https://bugly.qq.com/v2/index
    compile("com.tencent.bugly:crashreport:2.5.0", "com.tencent.bugly:nativecrashreport:3.1.2")
    // 阿里聚安全安全存储
    compile(name: 'SecurityGuardSDK-external-release-5.3.38', ext: 'aar')
    // mob sms-sdk
    compile(name: 'SMSSDK-2.1.3', ext: 'aar')
    // 腾讯 X5 内核
    compile files('libs/tbs_sdk_thirdapp_v3.0.0.1038_43000_sharewithdownload_obfs_20170110_144724.jar')

    // retrofit, okhttp, gson, rxjava, stetho
    compile("com.squareup.retrofit2:retrofit:${RETROFIT2_VERSION}", "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}")
    // deal ser/deser primitive types json convert
    // http://stackoverflow.com/questions/33139849/retrofit-2-0-post-method-with-body-is-string
    compile("com.squareup.retrofit2:converter-scalars:${RETROFIT2_VERSION}")
    compile("com.google.code.gson:gson:${GSON_VERSION}", "com.squareup.retrofit2:converter-gson:${RETROFIT2_VERSION}")
    compile("io.reactivex:rxjava:1.2.9", "io.reactivex:rxandroid:1.2.1")
    compile("com.squareup.retrofit2:adapter-rxjava:${RETROFIT2_VERSION}")
    compile("com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}")

    compile("com.github.bumptech.glide:glide:3.7.0", "com.github.bumptech.glide:okhttp3-integration:1.4.0@aar")
    compile("com.theartofdev.edmodo:android-image-cropper:2.3.1")

    compile('com.android.support.constraint:constraint-layout:1.0.2')
    compile('com.jaeger.statusbaruitl:library:1.3.6')
    compile('com.decay.country:country-support:0.1.1')
    compile('com.decay.logger:logger-wrapper:0.1.4')
    compile('com.facebook.conceal:conceal:1.1.3@aar')
    compile('com.jakewharton.threetenabp:threetenabp:1.0.5')
    compile('com.orhanobut:dialogplus:1.11@aar')
    compile("pub.devrel:easypermissions:0.3.1")
    compile('com.github.LsPush:Zxing-Integration:1245eed050')

    debugCompile('com.squareup.leakcanary:leakcanary-android-no-op:1.5')
    releaseCompile('com.squareup.leakcanary:leakcanary-android-no-op:1.5')
    testCompile('com.squareup.leakcanary:leakcanary-android-no-op:1.5')

    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
